name: Release
on: workflow_dispatch

jobs:
  npm:
    name: Release
    runs-on: ubuntu-latest
    env:
      NX_BRANCH: ${{ github.event.number }}
      NX_RUN_GROUP: ${{ github.run_id }}
      NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
          persist-credentials: false # Needed so that semantic release can use the admin token

      - name: Fetch latest base branch
        run: git fetch origin main

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.x

      - name: Cache node_modules # This includes Ivy builds of angular libraries
        id: cache-node-modules
        uses: actions/cache@v2.1.6
        with:
          path: node_modules
          key: node-${{ hashFiles('**/package-lock.json') }}

      - name: Cache NPM # Get a cache of packages for clean installs
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        uses: actions/cache@v2.1.6
        with:
          path: ~/.npm
          key: |
            npm-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}
            npm-${{ hashFiles('**/package.json') }}
            npm-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build release scripts
        run: npx nx build builders --skip-nx-cache

      - name: Release
        run: npm run release
        env:
          CI: true
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }} # Personal access token with repo permissions
