name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  npm:
    name: NPM
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v3.1.0
        with:
          node-version: 14.x

      - name: NPM
        uses: ng-easy/npm-setup@v1.8.4

  build:
    name: Build
    needs: [npm]
    runs-on: ubuntu-latest
    outputs:
      has-build-artifacts: ${{ steps.check-uploaded-artifacts.outputs.has-build-artifacts }}
    env:
      NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3.1.0
        with:
          node-version: 14.x

      - name: NPM
        uses: ng-easy/npm-setup@v1.8.4
        with:
          nx-key: build

      - name: Build
        uses: mansagroup/nrwl-nx-action@v2.1.0
        with:
          targets: build,favicons
          parallel: 'true'
          nxCloud: 'true'
          affected: 'false'

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: build-artifacts
          path: dist
          if-no-files-found: ignore

      - name: Check uploaded artifacts
        id: check-uploaded-artifacts
        run: echo "::set-output name=has-build-artifacts::${{ hashFiles('dist/**') != '' }}"

  lint:
    name: Lint
    needs: [npm]
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - name: Fetch latest base branch
        run: git fetch origin main

      - name: Setup Node.js
        uses: actions/setup-node@v3.1.0
        with:
          node-version: 14.x

      - name: NPM
        uses: ng-easy/npm-setup@v1.8.4
        with:
          nx-key: lint

      - name: Lint workspace
        run: npm run lint:workspace

      - name: Lint projects
        uses: mansagroup/nrwl-nx-action@v2.1.0
        with:
          targets: lint
          parallel: 'true'
          nxCloud: 'true'
          affected: 'false'

  test:
    name: Test
    needs: [npm]
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - name: Fetch latest base branch
        run: git fetch origin main

      - name: Setup Node.js
        uses: actions/setup-node@v3.1.0
        with:
          node-version: 14.x

      - name: NPM
        uses: ng-easy/npm-setup@v1.8.4
        with:
          nx-key: test

      - name: Test
        uses: mansagroup/nrwl-nx-action@v2.1.0
        with:
          targets: test
          parallel: 'true'
          maxParallel: '3'
          nxCloud: 'true'
          affected: 'false'

  e2e:
    name: e2e tests
    needs: [npm, build]
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.build.outputs.has-build-artifacts) }}
    env:
      NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - name: Fetch latest base branch
        run: git fetch origin main

      - name: Setup Node.js
        uses: actions/setup-node@v3.1.0
        with:
          node-version: 14.x

      - name: NPM
        uses: ng-easy/npm-setup@v1.8.4
        with:
          nx-key: e2e

      - name: Download build artifacts
        uses: actions/download-artifact@v3.0.0
        with:
          name: build-artifacts
          path: dist

      - name: e2e tests
        uses: mansagroup/nrwl-nx-action@v2.1.0
        with:
          targets: storybook-compodoc,e2e
          parallel: 'true'
          nxCloud: 'true'
          affected: 'false'

      - name: e2e test upload diffs
        uses: actions/upload-artifact@v3.0.0
        if: failure()
        with:
          name: visual-testing-diffs
          path: dist/cypress/apps/*/snapshot-diffs
          if-no-files-found: ignore

  lighthouse:
    name: Lighthouse audit
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.build.outputs.has-build-artifacts) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }} # https://github.com/GoogleChrome/lighthouse-ci/issues/172
          fetch-depth: 20 # https://github.com/GoogleChrome/lighthouse-ci/blob/main/docs/troubleshooting.md

      - name: Download build artifacts
        uses: actions/download-artifact@v3.0.0
        with:
          name: build-artifacts
          path: dist

      - name: Lighthouse audit
        uses: treosh/lighthouse-ci-action@9.3.0
        if: hashFiles('dist/apps/core-web-vitals-app/browser/**/*') != ''
        with:
          configPath: ./lighthouserc.json
          runs: 3
          uploadArtifacts: true
          temporaryPublicStorage: true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  docs:
    name: Docs
    needs: [npm, lint, build, test, e2e]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - name: Fetch latest base branch
        run: git fetch origin main

      - name: Setup Node.js
        uses: actions/setup-node@v3.1.0
        with:
          node-version: 14.x

      - name: NPM
        uses: ng-easy/npm-setup@v1.8.4
        with:
          nx-key: e2e

      - name: Storybook
        uses: mansagroup/nrwl-nx-action@v2.1.0
        with:
          targets: storybook-build
          all: 'true'
          parallel: 'true'
          nxCloud: 'true'

      - name: Deploy to GitHub pages
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: docs
